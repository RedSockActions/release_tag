name: "RedSock/TagReleaser"
description: "Creates tag based on version of matreshka config file "

author: "RedSock"

branding:
  icon: "flag"
  color: "red"

inputs:
  config_path:
    description: "Path to matreshka config file"
    default: "./config/config.yaml"
  token:
    description: "github token"
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}

    - name: Obtain current tag
      id: current_tag
      shell: bash
      run: |
        git fetch
        echo "tag=$(echo $(git describe --tags))" >> $GITHUB_OUTPUT

    - name: Install dependencies
      shell: bash
      run: |
        pip install pyyaml

    - name: Obtain tag
      id: config_tag
      env:
        INPUT_CONFIG_PATH: ${{ inputs.config_path }}
        GH_TOKEN: ${{ inputs.token }}
        CURRENT_TAG: ${{ steps.current_tag.outputs.tag }}
        REF: ${{ github.head_ref }}
      shell: python
      run: |
        import yaml
        import os
        import subprocess
        ### Obtaining github latest tag
        current_tag = os.environ['CURRENT_TAG']
      
        with open(os.environ['INPUT_CONFIG_PATH']) as config_file:
          config_tag = yaml.safe_load(config_file)
          config_tag = config_tag['app_info']['version']
          
        print('current tag:', current_tag)
        print('config tag', config_tag)
        
        if config_tag > current_tag:
          print('releasing new tag')
          subprocess.run(['gh', 'release', 'create', config_tag, '--latest', '--target', os.environ['REF']])